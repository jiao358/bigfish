package ext.datasource.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CustomerExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public CustomerExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("NAME is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("NAME is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("NAME =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("NAME <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("NAME >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("NAME >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("NAME <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("NAME <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("NAME like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("NAME not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("NAME in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("NAME not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("NAME between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("NAME not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andSexIsNull() {
			addCriterion("SEX is null");
			return (Criteria) this;
		}

		public Criteria andSexIsNotNull() {
			addCriterion("SEX is not null");
			return (Criteria) this;
		}

		public Criteria andSexEqualTo(Integer value) {
			addCriterion("SEX =", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotEqualTo(Integer value) {
			addCriterion("SEX <>", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThan(Integer value) {
			addCriterion("SEX >", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThanOrEqualTo(Integer value) {
			addCriterion("SEX >=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThan(Integer value) {
			addCriterion("SEX <", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThanOrEqualTo(Integer value) {
			addCriterion("SEX <=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexIn(List<Integer> values) {
			addCriterion("SEX in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotIn(List<Integer> values) {
			addCriterion("SEX not in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexBetween(Integer value1, Integer value2) {
			addCriterion("SEX between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotBetween(Integer value1, Integer value2) {
			addCriterion("SEX not between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andAgeIsNull() {
			addCriterion("AGE is null");
			return (Criteria) this;
		}

		public Criteria andAgeIsNotNull() {
			addCriterion("AGE is not null");
			return (Criteria) this;
		}

		public Criteria andAgeEqualTo(Integer value) {
			addCriterion("AGE =", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotEqualTo(Integer value) {
			addCriterion("AGE <>", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeGreaterThan(Integer value) {
			addCriterion("AGE >", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
			addCriterion("AGE >=", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeLessThan(Integer value) {
			addCriterion("AGE <", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeLessThanOrEqualTo(Integer value) {
			addCriterion("AGE <=", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeIn(List<Integer> values) {
			addCriterion("AGE in", values, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotIn(List<Integer> values) {
			addCriterion("AGE not in", values, "age");
			return (Criteria) this;
		}

		public Criteria andAgeBetween(Integer value1, Integer value2) {
			addCriterion("AGE between", value1, value2, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotBetween(Integer value1, Integer value2) {
			addCriterion("AGE not between", value1, value2, "age");
			return (Criteria) this;
		}

		public Criteria andCardTypeIsNull() {
			addCriterion("CARD_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andCardTypeIsNotNull() {
			addCriterion("CARD_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andCardTypeEqualTo(Integer value) {
			addCriterion("CARD_TYPE =", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeNotEqualTo(Integer value) {
			addCriterion("CARD_TYPE <>", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeGreaterThan(Integer value) {
			addCriterion("CARD_TYPE >", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("CARD_TYPE >=", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeLessThan(Integer value) {
			addCriterion("CARD_TYPE <", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeLessThanOrEqualTo(Integer value) {
			addCriterion("CARD_TYPE <=", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeIn(List<Integer> values) {
			addCriterion("CARD_TYPE in", values, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeNotIn(List<Integer> values) {
			addCriterion("CARD_TYPE not in", values, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeBetween(Integer value1, Integer value2) {
			addCriterion("CARD_TYPE between", value1, value2, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("CARD_TYPE not between", value1, value2, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardIdIsNull() {
			addCriterion("CARD_ID is null");
			return (Criteria) this;
		}

		public Criteria andCardIdIsNotNull() {
			addCriterion("CARD_ID is not null");
			return (Criteria) this;
		}

		public Criteria andCardIdEqualTo(String value) {
			addCriterion("CARD_ID =", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotEqualTo(String value) {
			addCriterion("CARD_ID <>", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdGreaterThan(String value) {
			addCriterion("CARD_ID >", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdGreaterThanOrEqualTo(String value) {
			addCriterion("CARD_ID >=", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLessThan(String value) {
			addCriterion("CARD_ID <", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLessThanOrEqualTo(String value) {
			addCriterion("CARD_ID <=", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLike(String value) {
			addCriterion("CARD_ID like", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotLike(String value) {
			addCriterion("CARD_ID not like", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdIn(List<String> values) {
			addCriterion("CARD_ID in", values, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotIn(List<String> values) {
			addCriterion("CARD_ID not in", values, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdBetween(String value1, String value2) {
			addCriterion("CARD_ID between", value1, value2, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotBetween(String value1, String value2) {
			addCriterion("CARD_ID not between", value1, value2, "cardId");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNull() {
			addCriterion("PHONE is null");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("PHONE is not null");
			return (Criteria) this;
		}

		public Criteria andPhoneEqualTo(String value) {
			addCriterion("PHONE =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualTo(String value) {
			addCriterion("PHONE <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThan(String value) {
			addCriterion("PHONE >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("PHONE >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThan(String value) {
			addCriterion("PHONE <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualTo(String value) {
			addCriterion("PHONE <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLike(String value) {
			addCriterion("PHONE like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotLike(String value) {
			addCriterion("PHONE not like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneIn(List<String> values) {
			addCriterion("PHONE in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotIn(List<String> values) {
			addCriterion("PHONE not in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneBetween(String value1, String value2) {
			addCriterion("PHONE between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotBetween(String value1, String value2) {
			addCriterion("PHONE not between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andAddressIsNull() {
			addCriterion("ADDRESS is null");
			return (Criteria) this;
		}

		public Criteria andAddressIsNotNull() {
			addCriterion("ADDRESS is not null");
			return (Criteria) this;
		}

		public Criteria andAddressEqualTo(String value) {
			addCriterion("ADDRESS =", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotEqualTo(String value) {
			addCriterion("ADDRESS <>", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThan(String value) {
			addCriterion("ADDRESS >", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThanOrEqualTo(String value) {
			addCriterion("ADDRESS >=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThan(String value) {
			addCriterion("ADDRESS <", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThanOrEqualTo(String value) {
			addCriterion("ADDRESS <=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLike(String value) {
			addCriterion("ADDRESS like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotLike(String value) {
			addCriterion("ADDRESS not like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressIn(List<String> values) {
			addCriterion("ADDRESS in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotIn(List<String> values) {
			addCriterion("ADDRESS not in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressBetween(String value1, String value2) {
			addCriterion("ADDRESS between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotBetween(String value1, String value2) {
			addCriterion("ADDRESS not between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("EMAIL is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("EMAIL is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("EMAIL =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("EMAIL <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("EMAIL >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("EMAIL >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("EMAIL <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("EMAIL <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("EMAIL like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("EMAIL not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addCriterion("EMAIL in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addCriterion("EMAIL not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("EMAIL between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("EMAIL not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherIsNull() {
			addCriterion("PROMOTE_TEACHER is null");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherIsNotNull() {
			addCriterion("PROMOTE_TEACHER is not null");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherEqualTo(Integer value) {
			addCriterion("PROMOTE_TEACHER =", value, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNotEqualTo(Integer value) {
			addCriterion("PROMOTE_TEACHER <>", value, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherGreaterThan(Integer value) {
			addCriterion("PROMOTE_TEACHER >", value, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherGreaterThanOrEqualTo(Integer value) {
			addCriterion("PROMOTE_TEACHER >=", value, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherLessThan(Integer value) {
			addCriterion("PROMOTE_TEACHER <", value, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherLessThanOrEqualTo(Integer value) {
			addCriterion("PROMOTE_TEACHER <=", value, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherIn(List<Integer> values) {
			addCriterion("PROMOTE_TEACHER in", values, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNotIn(List<Integer> values) {
			addCriterion("PROMOTE_TEACHER not in", values, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherBetween(Integer value1, Integer value2) {
			addCriterion("PROMOTE_TEACHER between", value1, value2, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNotBetween(Integer value1, Integer value2) {
			addCriterion("PROMOTE_TEACHER not between", value1, value2, "promoteTeacher");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameIsNull() {
			addCriterion("PROMOTE_TEACHER_NAME is null");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameIsNotNull() {
			addCriterion("PROMOTE_TEACHER_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameEqualTo(String value) {
			addCriterion("PROMOTE_TEACHER_NAME =", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameNotEqualTo(String value) {
			addCriterion("PROMOTE_TEACHER_NAME <>", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameGreaterThan(String value) {
			addCriterion("PROMOTE_TEACHER_NAME >", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameGreaterThanOrEqualTo(String value) {
			addCriterion("PROMOTE_TEACHER_NAME >=", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameLessThan(String value) {
			addCriterion("PROMOTE_TEACHER_NAME <", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameLessThanOrEqualTo(String value) {
			addCriterion("PROMOTE_TEACHER_NAME <=", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameLike(String value) {
			addCriterion("PROMOTE_TEACHER_NAME like", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameNotLike(String value) {
			addCriterion("PROMOTE_TEACHER_NAME not like", value, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameIn(List<String> values) {
			addCriterion("PROMOTE_TEACHER_NAME in", values, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameNotIn(List<String> values) {
			addCriterion("PROMOTE_TEACHER_NAME not in", values, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameBetween(String value1, String value2) {
			addCriterion("PROMOTE_TEACHER_NAME between", value1, value2, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andPromoteTeacherNameNotBetween(String value1, String value2) {
			addCriterion("PROMOTE_TEACHER_NAME not between", value1, value2, "promoteTeacherName");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaIsNull() {
			addCriterion("SCHOOL_AREA is null");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaIsNotNull() {
			addCriterion("SCHOOL_AREA is not null");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA =", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaNotEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA <>", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaGreaterThan(Integer value) {
			addCriterion("SCHOOL_AREA >", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaGreaterThanOrEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA >=", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaLessThan(Integer value) {
			addCriterion("SCHOOL_AREA <", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaLessThanOrEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA <=", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaIn(List<Integer> values) {
			addCriterion("SCHOOL_AREA in", values, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaNotIn(List<Integer> values) {
			addCriterion("SCHOOL_AREA not in", values, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaBetween(Integer value1, Integer value2) {
			addCriterion("SCHOOL_AREA between", value1, value2, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaNotBetween(Integer value1, Integer value2) {
			addCriterion("SCHOOL_AREA not between", value1, value2, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andPromoteStIsNull() {
			addCriterion("PROMOTE_ST is null");
			return (Criteria) this;
		}

		public Criteria andPromoteStIsNotNull() {
			addCriterion("PROMOTE_ST is not null");
			return (Criteria) this;
		}

		public Criteria andPromoteStEqualTo(Integer value) {
			addCriterion("PROMOTE_ST =", value, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStNotEqualTo(Integer value) {
			addCriterion("PROMOTE_ST <>", value, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStGreaterThan(Integer value) {
			addCriterion("PROMOTE_ST >", value, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStGreaterThanOrEqualTo(Integer value) {
			addCriterion("PROMOTE_ST >=", value, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStLessThan(Integer value) {
			addCriterion("PROMOTE_ST <", value, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStLessThanOrEqualTo(Integer value) {
			addCriterion("PROMOTE_ST <=", value, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStIn(List<Integer> values) {
			addCriterion("PROMOTE_ST in", values, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStNotIn(List<Integer> values) {
			addCriterion("PROMOTE_ST not in", values, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStBetween(Integer value1, Integer value2) {
			addCriterion("PROMOTE_ST between", value1, value2, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStNotBetween(Integer value1, Integer value2) {
			addCriterion("PROMOTE_ST not between", value1, value2, "promoteSt");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameIsNull() {
			addCriterion("PROMOTE_ST_NAME is null");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameIsNotNull() {
			addCriterion("PROMOTE_ST_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameEqualTo(String value) {
			addCriterion("PROMOTE_ST_NAME =", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameNotEqualTo(String value) {
			addCriterion("PROMOTE_ST_NAME <>", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameGreaterThan(String value) {
			addCriterion("PROMOTE_ST_NAME >", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameGreaterThanOrEqualTo(String value) {
			addCriterion("PROMOTE_ST_NAME >=", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameLessThan(String value) {
			addCriterion("PROMOTE_ST_NAME <", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameLessThanOrEqualTo(String value) {
			addCriterion("PROMOTE_ST_NAME <=", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameLike(String value) {
			addCriterion("PROMOTE_ST_NAME like", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameNotLike(String value) {
			addCriterion("PROMOTE_ST_NAME not like", value, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameIn(List<String> values) {
			addCriterion("PROMOTE_ST_NAME in", values, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameNotIn(List<String> values) {
			addCriterion("PROMOTE_ST_NAME not in", values, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameBetween(String value1, String value2) {
			addCriterion("PROMOTE_ST_NAME between", value1, value2, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andPromoteStNameNotBetween(String value1, String value2) {
			addCriterion("PROMOTE_ST_NAME not between", value1, value2, "promoteStName");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNull() {
			addCriterion("CREATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNotNull() {
			addCriterion("CREATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andCreateDateEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNull() {
			addCriterion("UPDATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNotNull() {
			addCriterion("UPDATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE =", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE <>", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE >", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE >=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThan(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE <", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE <=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIn(List<Date> values) {
			addCriterionForJDBCDate("UPDATE_DATE in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("UPDATE_DATE not in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("UPDATE_DATE between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("UPDATE_DATE not between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorIsNull() {
			addCriterion("CREATE_OPERATOR is null");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorIsNotNull() {
			addCriterion("CREATE_OPERATOR is not null");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR =", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorNotEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR <>", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorGreaterThan(Integer value) {
			addCriterion("CREATE_OPERATOR >", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorGreaterThanOrEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR >=", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorLessThan(Integer value) {
			addCriterion("CREATE_OPERATOR <", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorLessThanOrEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR <=", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorIn(List<Integer> values) {
			addCriterion("CREATE_OPERATOR in", values, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorNotIn(List<Integer> values) {
			addCriterion("CREATE_OPERATOR not in", values, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorBetween(Integer value1, Integer value2) {
			addCriterion("CREATE_OPERATOR between", value1, value2, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorNotBetween(Integer value1, Integer value2) {
			addCriterion("CREATE_OPERATOR not between", value1, value2, "createOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorIsNull() {
			addCriterion("UPDATE_OPERATOR is null");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorIsNotNull() {
			addCriterion("UPDATE_OPERATOR is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR =", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorNotEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR <>", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorGreaterThan(Integer value) {
			addCriterion("UPDATE_OPERATOR >", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorGreaterThanOrEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR >=", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorLessThan(Integer value) {
			addCriterion("UPDATE_OPERATOR <", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorLessThanOrEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR <=", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorIn(List<Integer> values) {
			addCriterion("UPDATE_OPERATOR in", values, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorNotIn(List<Integer> values) {
			addCriterion("UPDATE_OPERATOR not in", values, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorBetween(Integer value1, Integer value2) {
			addCriterion("UPDATE_OPERATOR between", value1, value2, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorNotBetween(Integer value1, Integer value2) {
			addCriterion("UPDATE_OPERATOR not between", value1, value2, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("NOTE is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("NOTE is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("NOTE =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("NOTE <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("NOTE >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("NOTE >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("NOTE <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("NOTE <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("NOTE like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("NOTE not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("NOTE in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("NOTE not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("NOTE between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("NOTE not between", value1, value2, "note");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TRX_CUSTOMER
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRX_CUSTOMER
     *
     * @mbg.generated do_not_delete_during_merge Sun Jun 18 17:57:06 GMT+08:00 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}