package ext.datasource.entity;

import java.util.ArrayList;
import java.util.List;

public class SDicExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public SDicExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andDicNameIsNull() {
			addCriterion("DIC_NAME is null");
			return (Criteria) this;
		}

		public Criteria andDicNameIsNotNull() {
			addCriterion("DIC_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andDicNameEqualTo(String value) {
			addCriterion("DIC_NAME =", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameNotEqualTo(String value) {
			addCriterion("DIC_NAME <>", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameGreaterThan(String value) {
			addCriterion("DIC_NAME >", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameGreaterThanOrEqualTo(String value) {
			addCriterion("DIC_NAME >=", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameLessThan(String value) {
			addCriterion("DIC_NAME <", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameLessThanOrEqualTo(String value) {
			addCriterion("DIC_NAME <=", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameLike(String value) {
			addCriterion("DIC_NAME like", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameNotLike(String value) {
			addCriterion("DIC_NAME not like", value, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameIn(List<String> values) {
			addCriterion("DIC_NAME in", values, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameNotIn(List<String> values) {
			addCriterion("DIC_NAME not in", values, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameBetween(String value1, String value2) {
			addCriterion("DIC_NAME between", value1, value2, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicNameNotBetween(String value1, String value2) {
			addCriterion("DIC_NAME not between", value1, value2, "dicName");
			return (Criteria) this;
		}

		public Criteria andDicValueIsNull() {
			addCriterion("DIC_VALUE is null");
			return (Criteria) this;
		}

		public Criteria andDicValueIsNotNull() {
			addCriterion("DIC_VALUE is not null");
			return (Criteria) this;
		}

		public Criteria andDicValueEqualTo(String value) {
			addCriterion("DIC_VALUE =", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueNotEqualTo(String value) {
			addCriterion("DIC_VALUE <>", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueGreaterThan(String value) {
			addCriterion("DIC_VALUE >", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueGreaterThanOrEqualTo(String value) {
			addCriterion("DIC_VALUE >=", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueLessThan(String value) {
			addCriterion("DIC_VALUE <", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueLessThanOrEqualTo(String value) {
			addCriterion("DIC_VALUE <=", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueLike(String value) {
			addCriterion("DIC_VALUE like", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueNotLike(String value) {
			addCriterion("DIC_VALUE not like", value, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueIn(List<String> values) {
			addCriterion("DIC_VALUE in", values, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueNotIn(List<String> values) {
			addCriterion("DIC_VALUE not in", values, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueBetween(String value1, String value2) {
			addCriterion("DIC_VALUE between", value1, value2, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicValueNotBetween(String value1, String value2) {
			addCriterion("DIC_VALUE not between", value1, value2, "dicValue");
			return (Criteria) this;
		}

		public Criteria andDicDescIsNull() {
			addCriterion("DIC_DESC is null");
			return (Criteria) this;
		}

		public Criteria andDicDescIsNotNull() {
			addCriterion("DIC_DESC is not null");
			return (Criteria) this;
		}

		public Criteria andDicDescEqualTo(String value) {
			addCriterion("DIC_DESC =", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescNotEqualTo(String value) {
			addCriterion("DIC_DESC <>", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescGreaterThan(String value) {
			addCriterion("DIC_DESC >", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescGreaterThanOrEqualTo(String value) {
			addCriterion("DIC_DESC >=", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescLessThan(String value) {
			addCriterion("DIC_DESC <", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescLessThanOrEqualTo(String value) {
			addCriterion("DIC_DESC <=", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescLike(String value) {
			addCriterion("DIC_DESC like", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescNotLike(String value) {
			addCriterion("DIC_DESC not like", value, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescIn(List<String> values) {
			addCriterion("DIC_DESC in", values, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescNotIn(List<String> values) {
			addCriterion("DIC_DESC not in", values, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescBetween(String value1, String value2) {
			addCriterion("DIC_DESC between", value1, value2, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicDescNotBetween(String value1, String value2) {
			addCriterion("DIC_DESC not between", value1, value2, "dicDesc");
			return (Criteria) this;
		}

		public Criteria andDicContIsNull() {
			addCriterion("DIC_CONT is null");
			return (Criteria) this;
		}

		public Criteria andDicContIsNotNull() {
			addCriterion("DIC_CONT is not null");
			return (Criteria) this;
		}

		public Criteria andDicContEqualTo(String value) {
			addCriterion("DIC_CONT =", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContNotEqualTo(String value) {
			addCriterion("DIC_CONT <>", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContGreaterThan(String value) {
			addCriterion("DIC_CONT >", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContGreaterThanOrEqualTo(String value) {
			addCriterion("DIC_CONT >=", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContLessThan(String value) {
			addCriterion("DIC_CONT <", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContLessThanOrEqualTo(String value) {
			addCriterion("DIC_CONT <=", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContLike(String value) {
			addCriterion("DIC_CONT like", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContNotLike(String value) {
			addCriterion("DIC_CONT not like", value, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContIn(List<String> values) {
			addCriterion("DIC_CONT in", values, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContNotIn(List<String> values) {
			addCriterion("DIC_CONT not in", values, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContBetween(String value1, String value2) {
			addCriterion("DIC_CONT between", value1, value2, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicContNotBetween(String value1, String value2) {
			addCriterion("DIC_CONT not between", value1, value2, "dicCont");
			return (Criteria) this;
		}

		public Criteria andDicOrderIsNull() {
			addCriterion("DIC_ORDER is null");
			return (Criteria) this;
		}

		public Criteria andDicOrderIsNotNull() {
			addCriterion("DIC_ORDER is not null");
			return (Criteria) this;
		}

		public Criteria andDicOrderEqualTo(Integer value) {
			addCriterion("DIC_ORDER =", value, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderNotEqualTo(Integer value) {
			addCriterion("DIC_ORDER <>", value, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderGreaterThan(Integer value) {
			addCriterion("DIC_ORDER >", value, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderGreaterThanOrEqualTo(Integer value) {
			addCriterion("DIC_ORDER >=", value, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderLessThan(Integer value) {
			addCriterion("DIC_ORDER <", value, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderLessThanOrEqualTo(Integer value) {
			addCriterion("DIC_ORDER <=", value, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderIn(List<Integer> values) {
			addCriterion("DIC_ORDER in", values, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderNotIn(List<Integer> values) {
			addCriterion("DIC_ORDER not in", values, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderBetween(Integer value1, Integer value2) {
			addCriterion("DIC_ORDER between", value1, value2, "dicOrder");
			return (Criteria) this;
		}

		public Criteria andDicOrderNotBetween(Integer value1, Integer value2) {
			addCriterion("DIC_ORDER not between", value1, value2, "dicOrder");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table S_DIC
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_DIC
     *
     * @mbg.generated do_not_delete_during_merge Thu Jun 15 20:24:27 GMT+08:00 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}