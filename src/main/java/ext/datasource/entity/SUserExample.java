package ext.datasource.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SUserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public SUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUserNameIsNull() {
			addCriterion("USER_NAME is null");
			return (Criteria) this;
		}

		public Criteria andUserNameIsNotNull() {
			addCriterion("USER_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andUserNameEqualTo(String value) {
			addCriterion("USER_NAME =", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotEqualTo(String value) {
			addCriterion("USER_NAME <>", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThan(String value) {
			addCriterion("USER_NAME >", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameGreaterThanOrEqualTo(String value) {
			addCriterion("USER_NAME >=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThan(String value) {
			addCriterion("USER_NAME <", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLessThanOrEqualTo(String value) {
			addCriterion("USER_NAME <=", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameLike(String value) {
			addCriterion("USER_NAME like", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotLike(String value) {
			addCriterion("USER_NAME not like", value, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameIn(List<String> values) {
			addCriterion("USER_NAME in", values, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotIn(List<String> values) {
			addCriterion("USER_NAME not in", values, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameBetween(String value1, String value2) {
			addCriterion("USER_NAME between", value1, value2, "userName");
			return (Criteria) this;
		}

		public Criteria andUserNameNotBetween(String value1, String value2) {
			addCriterion("USER_NAME not between", value1, value2, "userName");
			return (Criteria) this;
		}

		public Criteria andUserPwdIsNull() {
			addCriterion("USER_PWD is null");
			return (Criteria) this;
		}

		public Criteria andUserPwdIsNotNull() {
			addCriterion("USER_PWD is not null");
			return (Criteria) this;
		}

		public Criteria andUserPwdEqualTo(String value) {
			addCriterion("USER_PWD =", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdNotEqualTo(String value) {
			addCriterion("USER_PWD <>", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdGreaterThan(String value) {
			addCriterion("USER_PWD >", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdGreaterThanOrEqualTo(String value) {
			addCriterion("USER_PWD >=", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdLessThan(String value) {
			addCriterion("USER_PWD <", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdLessThanOrEqualTo(String value) {
			addCriterion("USER_PWD <=", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdLike(String value) {
			addCriterion("USER_PWD like", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdNotLike(String value) {
			addCriterion("USER_PWD not like", value, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdIn(List<String> values) {
			addCriterion("USER_PWD in", values, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdNotIn(List<String> values) {
			addCriterion("USER_PWD not in", values, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdBetween(String value1, String value2) {
			addCriterion("USER_PWD between", value1, value2, "userPwd");
			return (Criteria) this;
		}

		public Criteria andUserPwdNotBetween(String value1, String value2) {
			addCriterion("USER_PWD not between", value1, value2, "userPwd");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNull() {
			addCriterion("CREATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNotNull() {
			addCriterion("CREATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andCreateDateEqualTo(Date value) {
			addCriterion("CREATE_DATE =", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotEqualTo(Date value) {
			addCriterion("CREATE_DATE <>", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThan(Date value) {
			addCriterion("CREATE_DATE >", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
			addCriterion("CREATE_DATE >=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThan(Date value) {
			addCriterion("CREATE_DATE <", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThanOrEqualTo(Date value) {
			addCriterion("CREATE_DATE <=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateIn(List<Date> values) {
			addCriterion("CREATE_DATE in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotIn(List<Date> values) {
			addCriterion("CREATE_DATE not in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateBetween(Date value1, Date value2) {
			addCriterion("CREATE_DATE between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotBetween(Date value1, Date value2) {
			addCriterion("CREATE_DATE not between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateIsNull() {
			addCriterion("UPDATE_DAATE is null");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateIsNotNull() {
			addCriterion("UPDATE_DAATE is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateEqualTo(Date value) {
			addCriterion("UPDATE_DAATE =", value, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateNotEqualTo(Date value) {
			addCriterion("UPDATE_DAATE <>", value, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateGreaterThan(Date value) {
			addCriterion("UPDATE_DAATE >", value, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateGreaterThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DAATE >=", value, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateLessThan(Date value) {
			addCriterion("UPDATE_DAATE <", value, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateLessThanOrEqualTo(Date value) {
			addCriterion("UPDATE_DAATE <=", value, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateIn(List<Date> values) {
			addCriterion("UPDATE_DAATE in", values, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateNotIn(List<Date> values) {
			addCriterion("UPDATE_DAATE not in", values, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DAATE between", value1, value2, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andUpdateDaateNotBetween(Date value1, Date value2) {
			addCriterion("UPDATE_DAATE not between", value1, value2, "updateDaate");
			return (Criteria) this;
		}

		public Criteria andOwnUserIsNull() {
			addCriterion("OWN_USER is null");
			return (Criteria) this;
		}

		public Criteria andOwnUserIsNotNull() {
			addCriterion("OWN_USER is not null");
			return (Criteria) this;
		}

		public Criteria andOwnUserEqualTo(Integer value) {
			addCriterion("OWN_USER =", value, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserNotEqualTo(Integer value) {
			addCriterion("OWN_USER <>", value, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserGreaterThan(Integer value) {
			addCriterion("OWN_USER >", value, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserGreaterThanOrEqualTo(Integer value) {
			addCriterion("OWN_USER >=", value, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserLessThan(Integer value) {
			addCriterion("OWN_USER <", value, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserLessThanOrEqualTo(Integer value) {
			addCriterion("OWN_USER <=", value, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserIn(List<Integer> values) {
			addCriterion("OWN_USER in", values, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserNotIn(List<Integer> values) {
			addCriterion("OWN_USER not in", values, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserBetween(Integer value1, Integer value2) {
			addCriterion("OWN_USER between", value1, value2, "ownUser");
			return (Criteria) this;
		}

		public Criteria andOwnUserNotBetween(Integer value1, Integer value2) {
			addCriterion("OWN_USER not between", value1, value2, "ownUser");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table S_USER
	 * @mbg.generated  Tue Jun 13 22:26:57 GMT+08:00 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table S_USER
     *
     * @mbg.generated do_not_delete_during_merge Mon Jun 12 22:55:26 GMT+08:00 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}