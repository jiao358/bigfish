package ext.datasource.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.math.BigDecimal;

public class TrxClassExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public TrxClassExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andClassNameIsNull() {
			addCriterion("CLASS_NAME is null");
			return (Criteria) this;
		}

		public Criteria andClassNameIsNotNull() {
			addCriterion("CLASS_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andClassNameEqualTo(String value) {
			addCriterion("CLASS_NAME =", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameNotEqualTo(String value) {
			addCriterion("CLASS_NAME <>", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameGreaterThan(String value) {
			addCriterion("CLASS_NAME >", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameGreaterThanOrEqualTo(String value) {
			addCriterion("CLASS_NAME >=", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameLessThan(String value) {
			addCriterion("CLASS_NAME <", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameLessThanOrEqualTo(String value) {
			addCriterion("CLASS_NAME <=", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameLike(String value) {
			addCriterion("CLASS_NAME like", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameNotLike(String value) {
			addCriterion("CLASS_NAME not like", value, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameIn(List<String> values) {
			addCriterion("CLASS_NAME in", values, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameNotIn(List<String> values) {
			addCriterion("CLASS_NAME not in", values, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameBetween(String value1, String value2) {
			addCriterion("CLASS_NAME between", value1, value2, "className");
			return (Criteria) this;
		}

		public Criteria andClassNameNotBetween(String value1, String value2) {
			addCriterion("CLASS_NAME not between", value1, value2, "className");
			return (Criteria) this;
		}

		public Criteria andAcademicYearIsNull() {
			addCriterion("ACADEMIC_YEAR is null");
			return (Criteria) this;
		}

		public Criteria andAcademicYearIsNotNull() {
			addCriterion("ACADEMIC_YEAR is not null");
			return (Criteria) this;
		}

		public Criteria andAcademicYearEqualTo(Integer value) {
			addCriterion("ACADEMIC_YEAR =", value, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearNotEqualTo(Integer value) {
			addCriterion("ACADEMIC_YEAR <>", value, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearGreaterThan(Integer value) {
			addCriterion("ACADEMIC_YEAR >", value, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearGreaterThanOrEqualTo(Integer value) {
			addCriterion("ACADEMIC_YEAR >=", value, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearLessThan(Integer value) {
			addCriterion("ACADEMIC_YEAR <", value, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearLessThanOrEqualTo(Integer value) {
			addCriterion("ACADEMIC_YEAR <=", value, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearIn(List<Integer> values) {
			addCriterion("ACADEMIC_YEAR in", values, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearNotIn(List<Integer> values) {
			addCriterion("ACADEMIC_YEAR not in", values, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearBetween(Integer value1, Integer value2) {
			addCriterion("ACADEMIC_YEAR between", value1, value2, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicYearNotBetween(Integer value1, Integer value2) {
			addCriterion("ACADEMIC_YEAR not between", value1, value2, "academicYear");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterIsNull() {
			addCriterion("ACADEMIC_QUARTER is null");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterIsNotNull() {
			addCriterion("ACADEMIC_QUARTER is not null");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterEqualTo(Integer value) {
			addCriterion("ACADEMIC_QUARTER =", value, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterNotEqualTo(Integer value) {
			addCriterion("ACADEMIC_QUARTER <>", value, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterGreaterThan(Integer value) {
			addCriterion("ACADEMIC_QUARTER >", value, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterGreaterThanOrEqualTo(Integer value) {
			addCriterion("ACADEMIC_QUARTER >=", value, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterLessThan(Integer value) {
			addCriterion("ACADEMIC_QUARTER <", value, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterLessThanOrEqualTo(Integer value) {
			addCriterion("ACADEMIC_QUARTER <=", value, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterIn(List<Integer> values) {
			addCriterion("ACADEMIC_QUARTER in", values, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterNotIn(List<Integer> values) {
			addCriterion("ACADEMIC_QUARTER not in", values, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterBetween(Integer value1, Integer value2) {
			addCriterion("ACADEMIC_QUARTER between", value1, value2, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andAcademicQuarterNotBetween(Integer value1, Integer value2) {
			addCriterion("ACADEMIC_QUARTER not between", value1, value2, "academicQuarter");
			return (Criteria) this;
		}

		public Criteria andStartTimeIsNull() {
			addCriterion("START_TIME is null");
			return (Criteria) this;
		}

		public Criteria andStartTimeIsNotNull() {
			addCriterion("START_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andStartTimeEqualTo(Date value) {
			addCriterionForJDBCDate("START_TIME =", value, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("START_TIME <>", value, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("START_TIME >", value, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("START_TIME >=", value, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeLessThan(Date value) {
			addCriterionForJDBCDate("START_TIME <", value, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("START_TIME <=", value, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeIn(List<Date> values) {
			addCriterionForJDBCDate("START_TIME in", values, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("START_TIME not in", values, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("START_TIME between", value1, value2, "startTime");
			return (Criteria) this;
		}

		public Criteria andStartTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("START_TIME not between", value1, value2, "startTime");
			return (Criteria) this;
		}

		public Criteria andSchoolIsNull() {
			addCriterion("SCHOOL is null");
			return (Criteria) this;
		}

		public Criteria andSchoolIsNotNull() {
			addCriterion("SCHOOL is not null");
			return (Criteria) this;
		}

		public Criteria andSchoolEqualTo(Integer value) {
			addCriterion("SCHOOL =", value, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolNotEqualTo(Integer value) {
			addCriterion("SCHOOL <>", value, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolGreaterThan(Integer value) {
			addCriterion("SCHOOL >", value, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolGreaterThanOrEqualTo(Integer value) {
			addCriterion("SCHOOL >=", value, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolLessThan(Integer value) {
			addCriterion("SCHOOL <", value, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolLessThanOrEqualTo(Integer value) {
			addCriterion("SCHOOL <=", value, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolIn(List<Integer> values) {
			addCriterion("SCHOOL in", values, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolNotIn(List<Integer> values) {
			addCriterion("SCHOOL not in", values, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolBetween(Integer value1, Integer value2) {
			addCriterion("SCHOOL between", value1, value2, "school");
			return (Criteria) this;
		}

		public Criteria andSchoolNotBetween(Integer value1, Integer value2) {
			addCriterion("SCHOOL not between", value1, value2, "school");
			return (Criteria) this;
		}

		public Criteria andTeacherIdIsNull() {
			addCriterion("TEACHER_ID is null");
			return (Criteria) this;
		}

		public Criteria andTeacherIdIsNotNull() {
			addCriterion("TEACHER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andTeacherIdEqualTo(Integer value) {
			addCriterion("TEACHER_ID =", value, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdNotEqualTo(Integer value) {
			addCriterion("TEACHER_ID <>", value, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdGreaterThan(Integer value) {
			addCriterion("TEACHER_ID >", value, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("TEACHER_ID >=", value, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdLessThan(Integer value) {
			addCriterion("TEACHER_ID <", value, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdLessThanOrEqualTo(Integer value) {
			addCriterion("TEACHER_ID <=", value, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdIn(List<Integer> values) {
			addCriterion("TEACHER_ID in", values, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdNotIn(List<Integer> values) {
			addCriterion("TEACHER_ID not in", values, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdBetween(Integer value1, Integer value2) {
			addCriterion("TEACHER_ID between", value1, value2, "teacherId");
			return (Criteria) this;
		}

		public Criteria andTeacherIdNotBetween(Integer value1, Integer value2) {
			addCriterion("TEACHER_ID not between", value1, value2, "teacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdIsNull() {
			addCriterion("ASS_TEACHER_ID is null");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdIsNotNull() {
			addCriterion("ASS_TEACHER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdEqualTo(Integer value) {
			addCriterion("ASS_TEACHER_ID =", value, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdNotEqualTo(Integer value) {
			addCriterion("ASS_TEACHER_ID <>", value, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdGreaterThan(Integer value) {
			addCriterion("ASS_TEACHER_ID >", value, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ASS_TEACHER_ID >=", value, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdLessThan(Integer value) {
			addCriterion("ASS_TEACHER_ID <", value, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdLessThanOrEqualTo(Integer value) {
			addCriterion("ASS_TEACHER_ID <=", value, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdIn(List<Integer> values) {
			addCriterion("ASS_TEACHER_ID in", values, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdNotIn(List<Integer> values) {
			addCriterion("ASS_TEACHER_ID not in", values, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdBetween(Integer value1, Integer value2) {
			addCriterion("ASS_TEACHER_ID between", value1, value2, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andAssTeacherIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ASS_TEACHER_ID not between", value1, value2, "assTeacherId");
			return (Criteria) this;
		}

		public Criteria andClassMemberIsNull() {
			addCriterion("CLASS_MEMBER is null");
			return (Criteria) this;
		}

		public Criteria andClassMemberIsNotNull() {
			addCriterion("CLASS_MEMBER is not null");
			return (Criteria) this;
		}

		public Criteria andClassMemberEqualTo(Integer value) {
			addCriterion("CLASS_MEMBER =", value, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberNotEqualTo(Integer value) {
			addCriterion("CLASS_MEMBER <>", value, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberGreaterThan(Integer value) {
			addCriterion("CLASS_MEMBER >", value, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberGreaterThanOrEqualTo(Integer value) {
			addCriterion("CLASS_MEMBER >=", value, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberLessThan(Integer value) {
			addCriterion("CLASS_MEMBER <", value, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberLessThanOrEqualTo(Integer value) {
			addCriterion("CLASS_MEMBER <=", value, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberIn(List<Integer> values) {
			addCriterion("CLASS_MEMBER in", values, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberNotIn(List<Integer> values) {
			addCriterion("CLASS_MEMBER not in", values, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberBetween(Integer value1, Integer value2) {
			addCriterion("CLASS_MEMBER between", value1, value2, "classMember");
			return (Criteria) this;
		}

		public Criteria andClassMemberNotBetween(Integer value1, Integer value2) {
			addCriterion("CLASS_MEMBER not between", value1, value2, "classMember");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNull() {
			addCriterion("CREATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNotNull() {
			addCriterion("CREATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andCreateDateEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorIsNull() {
			addCriterion("CREATE_OPERATOR is null");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorIsNotNull() {
			addCriterion("CREATE_OPERATOR is not null");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR =", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorNotEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR <>", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorGreaterThan(Integer value) {
			addCriterion("CREATE_OPERATOR >", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorGreaterThanOrEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR >=", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorLessThan(Integer value) {
			addCriterion("CREATE_OPERATOR <", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorLessThanOrEqualTo(Integer value) {
			addCriterion("CREATE_OPERATOR <=", value, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorIn(List<Integer> values) {
			addCriterion("CREATE_OPERATOR in", values, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorNotIn(List<Integer> values) {
			addCriterion("CREATE_OPERATOR not in", values, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorBetween(Integer value1, Integer value2) {
			addCriterion("CREATE_OPERATOR between", value1, value2, "createOperator");
			return (Criteria) this;
		}

		public Criteria andCreateOperatorNotBetween(Integer value1, Integer value2) {
			addCriterion("CREATE_OPERATOR not between", value1, value2, "createOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNull() {
			addCriterion("UPDATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIsNotNull() {
			addCriterion("UPDATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateDateEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE =", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE <>", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE >", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE >=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThan(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE <", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("UPDATE_DATE <=", value, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateIn(List<Date> values) {
			addCriterionForJDBCDate("UPDATE_DATE in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("UPDATE_DATE not in", values, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("UPDATE_DATE between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("UPDATE_DATE not between", value1, value2, "updateDate");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorIsNull() {
			addCriterion("UPDATE_OPERATOR is null");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorIsNotNull() {
			addCriterion("UPDATE_OPERATOR is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR =", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorNotEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR <>", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorGreaterThan(Integer value) {
			addCriterion("UPDATE_OPERATOR >", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorGreaterThanOrEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR >=", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorLessThan(Integer value) {
			addCriterion("UPDATE_OPERATOR <", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorLessThanOrEqualTo(Integer value) {
			addCriterion("UPDATE_OPERATOR <=", value, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorIn(List<Integer> values) {
			addCriterion("UPDATE_OPERATOR in", values, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorNotIn(List<Integer> values) {
			addCriterion("UPDATE_OPERATOR not in", values, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorBetween(Integer value1, Integer value2) {
			addCriterion("UPDATE_OPERATOR between", value1, value2, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andUpdateOperatorNotBetween(Integer value1, Integer value2) {
			addCriterion("UPDATE_OPERATOR not between", value1, value2, "updateOperator");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaIsNull() {
			addCriterion("SCHOOL_AREA is null");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaIsNotNull() {
			addCriterion("SCHOOL_AREA is not null");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA =", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaNotEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA <>", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaGreaterThan(Integer value) {
			addCriterion("SCHOOL_AREA >", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaGreaterThanOrEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA >=", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaLessThan(Integer value) {
			addCriterion("SCHOOL_AREA <", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaLessThanOrEqualTo(Integer value) {
			addCriterion("SCHOOL_AREA <=", value, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaIn(List<Integer> values) {
			addCriterion("SCHOOL_AREA in", values, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaNotIn(List<Integer> values) {
			addCriterion("SCHOOL_AREA not in", values, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaBetween(Integer value1, Integer value2) {
			addCriterion("SCHOOL_AREA between", value1, value2, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andSchoolAreaNotBetween(Integer value1, Integer value2) {
			addCriterion("SCHOOL_AREA not between", value1, value2, "schoolArea");
			return (Criteria) this;
		}

		public Criteria andClassRateIsNull() {
			addCriterion("CLASS_RATE is null");
			return (Criteria) this;
		}

		public Criteria andClassRateIsNotNull() {
			addCriterion("CLASS_RATE is not null");
			return (Criteria) this;
		}

		public Criteria andClassRateEqualTo(BigDecimal value) {
			addCriterion("CLASS_RATE =", value, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateNotEqualTo(BigDecimal value) {
			addCriterion("CLASS_RATE <>", value, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateGreaterThan(BigDecimal value) {
			addCriterion("CLASS_RATE >", value, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("CLASS_RATE >=", value, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateLessThan(BigDecimal value) {
			addCriterion("CLASS_RATE <", value, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateLessThanOrEqualTo(BigDecimal value) {
			addCriterion("CLASS_RATE <=", value, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateIn(List<BigDecimal> values) {
			addCriterion("CLASS_RATE in", values, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateNotIn(List<BigDecimal> values) {
			addCriterion("CLASS_RATE not in", values, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("CLASS_RATE between", value1, value2, "classRate");
			return (Criteria) this;
		}

		public Criteria andClassRateNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("CLASS_RATE not between", value1, value2, "classRate");
			return (Criteria) this;
		}

		public Criteria andStartHourIsNull() {
			addCriterion("START_HOUR is null");
			return (Criteria) this;
		}

		public Criteria andStartHourIsNotNull() {
			addCriterion("START_HOUR is not null");
			return (Criteria) this;
		}

		public Criteria andStartHourEqualTo(Integer value) {
			addCriterion("START_HOUR =", value, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourNotEqualTo(Integer value) {
			addCriterion("START_HOUR <>", value, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourGreaterThan(Integer value) {
			addCriterion("START_HOUR >", value, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourGreaterThanOrEqualTo(Integer value) {
			addCriterion("START_HOUR >=", value, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourLessThan(Integer value) {
			addCriterion("START_HOUR <", value, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourLessThanOrEqualTo(Integer value) {
			addCriterion("START_HOUR <=", value, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourIn(List<Integer> values) {
			addCriterion("START_HOUR in", values, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourNotIn(List<Integer> values) {
			addCriterion("START_HOUR not in", values, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourBetween(Integer value1, Integer value2) {
			addCriterion("START_HOUR between", value1, value2, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartHourNotBetween(Integer value1, Integer value2) {
			addCriterion("START_HOUR not between", value1, value2, "startHour");
			return (Criteria) this;
		}

		public Criteria andStartMinIsNull() {
			addCriterion("START_MIN is null");
			return (Criteria) this;
		}

		public Criteria andStartMinIsNotNull() {
			addCriterion("START_MIN is not null");
			return (Criteria) this;
		}

		public Criteria andStartMinEqualTo(Integer value) {
			addCriterion("START_MIN =", value, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinNotEqualTo(Integer value) {
			addCriterion("START_MIN <>", value, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinGreaterThan(Integer value) {
			addCriterion("START_MIN >", value, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinGreaterThanOrEqualTo(Integer value) {
			addCriterion("START_MIN >=", value, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinLessThan(Integer value) {
			addCriterion("START_MIN <", value, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinLessThanOrEqualTo(Integer value) {
			addCriterion("START_MIN <=", value, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinIn(List<Integer> values) {
			addCriterion("START_MIN in", values, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinNotIn(List<Integer> values) {
			addCriterion("START_MIN not in", values, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinBetween(Integer value1, Integer value2) {
			addCriterion("START_MIN between", value1, value2, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartMinNotBetween(Integer value1, Integer value2) {
			addCriterion("START_MIN not between", value1, value2, "startMin");
			return (Criteria) this;
		}

		public Criteria andStartScheduleIsNull() {
			addCriterion("START_SCHEDULE is null");
			return (Criteria) this;
		}

		public Criteria andStartScheduleIsNotNull() {
			addCriterion("START_SCHEDULE is not null");
			return (Criteria) this;
		}

		public Criteria andStartScheduleEqualTo(String value) {
			addCriterion("START_SCHEDULE =", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleNotEqualTo(String value) {
			addCriterion("START_SCHEDULE <>", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleGreaterThan(String value) {
			addCriterion("START_SCHEDULE >", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleGreaterThanOrEqualTo(String value) {
			addCriterion("START_SCHEDULE >=", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleLessThan(String value) {
			addCriterion("START_SCHEDULE <", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleLessThanOrEqualTo(String value) {
			addCriterion("START_SCHEDULE <=", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleLike(String value) {
			addCriterion("START_SCHEDULE like", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleNotLike(String value) {
			addCriterion("START_SCHEDULE not like", value, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleIn(List<String> values) {
			addCriterion("START_SCHEDULE in", values, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleNotIn(List<String> values) {
			addCriterion("START_SCHEDULE not in", values, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleBetween(String value1, String value2) {
			addCriterion("START_SCHEDULE between", value1, value2, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andStartScheduleNotBetween(String value1, String value2) {
			addCriterion("START_SCHEDULE not between", value1, value2, "startSchedule");
			return (Criteria) this;
		}

		public Criteria andClassStateIsNull() {
			addCriterion("CLASS_STATE is null");
			return (Criteria) this;
		}

		public Criteria andClassStateIsNotNull() {
			addCriterion("CLASS_STATE is not null");
			return (Criteria) this;
		}

		public Criteria andClassStateEqualTo(Integer value) {
			addCriterion("CLASS_STATE =", value, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateNotEqualTo(Integer value) {
			addCriterion("CLASS_STATE <>", value, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateGreaterThan(Integer value) {
			addCriterion("CLASS_STATE >", value, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateGreaterThanOrEqualTo(Integer value) {
			addCriterion("CLASS_STATE >=", value, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateLessThan(Integer value) {
			addCriterion("CLASS_STATE <", value, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateLessThanOrEqualTo(Integer value) {
			addCriterion("CLASS_STATE <=", value, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateIn(List<Integer> values) {
			addCriterion("CLASS_STATE in", values, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateNotIn(List<Integer> values) {
			addCriterion("CLASS_STATE not in", values, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateBetween(Integer value1, Integer value2) {
			addCriterion("CLASS_STATE between", value1, value2, "classState");
			return (Criteria) this;
		}

		public Criteria andClassStateNotBetween(Integer value1, Integer value2) {
			addCriterion("CLASS_STATE not between", value1, value2, "classState");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberIsNull() {
			addCriterion("CURRENT_MEMBER is null");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberIsNotNull() {
			addCriterion("CURRENT_MEMBER is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberEqualTo(Integer value) {
			addCriterion("CURRENT_MEMBER =", value, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberNotEqualTo(Integer value) {
			addCriterion("CURRENT_MEMBER <>", value, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberGreaterThan(Integer value) {
			addCriterion("CURRENT_MEMBER >", value, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberGreaterThanOrEqualTo(Integer value) {
			addCriterion("CURRENT_MEMBER >=", value, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberLessThan(Integer value) {
			addCriterion("CURRENT_MEMBER <", value, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberLessThanOrEqualTo(Integer value) {
			addCriterion("CURRENT_MEMBER <=", value, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberIn(List<Integer> values) {
			addCriterion("CURRENT_MEMBER in", values, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberNotIn(List<Integer> values) {
			addCriterion("CURRENT_MEMBER not in", values, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberBetween(Integer value1, Integer value2) {
			addCriterion("CURRENT_MEMBER between", value1, value2, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentMemberNotBetween(Integer value1, Integer value2) {
			addCriterion("CURRENT_MEMBER not between", value1, value2, "currentMember");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolIsNull() {
			addCriterion("CURRENT_SCHOOL is null");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolIsNotNull() {
			addCriterion("CURRENT_SCHOOL is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolEqualTo(Integer value) {
			addCriterion("CURRENT_SCHOOL =", value, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolNotEqualTo(Integer value) {
			addCriterion("CURRENT_SCHOOL <>", value, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolGreaterThan(Integer value) {
			addCriterion("CURRENT_SCHOOL >", value, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolGreaterThanOrEqualTo(Integer value) {
			addCriterion("CURRENT_SCHOOL >=", value, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolLessThan(Integer value) {
			addCriterion("CURRENT_SCHOOL <", value, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolLessThanOrEqualTo(Integer value) {
			addCriterion("CURRENT_SCHOOL <=", value, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolIn(List<Integer> values) {
			addCriterion("CURRENT_SCHOOL in", values, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolNotIn(List<Integer> values) {
			addCriterion("CURRENT_SCHOOL not in", values, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolBetween(Integer value1, Integer value2) {
			addCriterion("CURRENT_SCHOOL between", value1, value2, "currentSchool");
			return (Criteria) this;
		}

		public Criteria andCurrentSchoolNotBetween(Integer value1, Integer value2) {
			addCriterion("CURRENT_SCHOOL not between", value1, value2, "currentSchool");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table TRX_CLASS
	 * @mbg.generated  Tue Jun 27 11:19:33 GMT+08:00 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRX_CLASS
     *
     * @mbg.generated do_not_delete_during_merge Wed Jun 21 00:41:24 GMT+08:00 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}